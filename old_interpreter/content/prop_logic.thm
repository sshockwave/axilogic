# not
express # definition
    symbol
        concept not
clear

express refer super:prop_logic_pure:infer
    export infer
clear

express
    symbol # a
        symbol # b
            refer infer
                refer infer # not(a)>not(b)
                    refer not
                        push 1 apply
                    apply
                    refer not
                        push 2 apply
                    apply
                apply
                refer infer # b>a
                    push 2 apply
                    push 1 apply
                apply
                export fo_l3 # (not(a)>not(b))>(b>a)
            pop
clear

express refer super:prop_logic_pure:mp assume
    express refer super:prop_logic_pure:fo_l1 assume
        express refer super:prop_logic_pure:fo_l2 assume
            express refer fo_l3 assume
                concept prop_logic
clear
refer prop_logic
    export all
clear
express refer prop_logic trustall assume
    push 0
        unbind # mp: 1
            unbind # fo_l1: 3
                unbind pop # fo_l2: 4
                refer super:prop_logic_pure:hs
                    refer super:prop_logic_pure:all
                        push 1 apply
                        push 2 apply
                        push 3 apply
                    apply
                    export hs
clear


# Proof by contradiction
express refer prop_logic trustall assume
    symbol # a: 1
        push 0
            push 0 # 2: double_neg
                unbind # 3: mp
                    unbind # 4: fo_l1
                        unbind # 5: fo_l2
                            unbind pop # 6: fo_l3
                            refer hs
                                push 0 apply
                                express refer not
                                    push 1 apply
                                apply # ~a
                                express refer infer
                                    refer not
                                        refer not
                                            refer infer
                                                refer not
                                                    push 1 apply
                                                apply
                                                push 1 apply
                                            apply
                                        apply
                                    apply
                                    refer not
                                        push 1 apply
                                    apply
                                    # (~~(~a>a)>~a)
                                apply 
                                express refer infer
                                    push 1 apply
                                    refer not
                                        refer infer
                                            refer not
                                                push 1 apply
                                            apply
                                            push 1 apply
                                        apply
                                    apply
                                    # a>(~(~a>a))
                                apply
                                # HS init complete, expect a>b and b>c
                                push 4 # fo_l1
                                    express refer not
                                        push 1 apply
                                    apply
                                    express refer not
                                        refer not
                                            refer infer
                                                refer not
                                                    push 1 apply
                                                apply
                                                push 1 apply
                                            apply
                                        apply
                                    apply
                                    # (~a>(~~(~a>a)>~a))
                                apply
                                push 6 # fo_l3
                                    express refer not
                                        refer infer
                                            refer not
                                                push 1 apply
                                            apply
                                            push 1 apply
                                        apply
                                    apply
                                    express push 1 apply
                                apply
                                # HS complete, get on 7:
                                # (~a>(a>~(~a>a)))
                                push 3 # mp
                                    push 7 apply # (~a>(a>~(~a>a)))
                                    express refer infer
                                        refer infer
                                            refer not
                                                push 1 apply
                                            apply
                                            push 1 apply
                                        apply
                                        refer infer
                                            refer not
                                                push 1 apply
                                            apply
                                            refer not
                                                refer infer
                                                    refer not
                                                        push 1 apply
                                                    apply
                                                    push 1 apply
                                                apply
                                            apply
                                        apply
                                    apply
                                    push 5 # fo_l2
                                        express refer not
                                            push 1 apply
                                        apply # ~a
                                        express push 1 apply # a
                                        express refer not
                                            refer infer
                                                refer not
                                                    push 1 apply
                                                apply # ~a
                                                push 1 apply # a
                                            apply # ~a>a
                                        apply #~(~a>a)
                                    apply # (~a>(a>~(~a>a)))>((~a>a)>(~a>~(~a>a)))
                                    swap
                                apply
                                # (~a>a)>(~a>~(~a>a))
                                refer hs # (~a>a),(~a>~(~a>a)),((~a>a)>a)
                                    push 0 apply
                                    express refer infer
                                        refer not
                                            push 1 apply
                                        apply
                                        push 1 apply
                                    apply # (~a>a)
                                    express refer infer
                                        refer not
                                            push 1 apply
                                        apply # ~a
                                        refer not
                                            refer infer
                                                refer not
                                                    push 1 apply
                                                apply
                                                push 1 apply
                                            apply
                                        apply # ~(~a>a)
                                    apply # ~a>~(~a>a)
                                    express refer infer
                                        refer infer
                                            refer not
                                                push 1 apply
                                            apply
                                            push 1 apply
                                        apply # (~a>a)
                                        push 1 apply # a
                                    apply # (~a>a)>a
                                    swap
                                apply
                                push 6 # fo_l3
                                    express push 1 apply
                                    express refer infer
                                        refer not
                                            push 1 apply
                                        apply
                                        push 1 apply
                                    apply # (~a>a)
                                    # (~a>~(~a>a))>((~a>a)>a)
                                apply
                                # (~a>a)>((~a>a)>a)
                                push 3 # mp
                                    express refer infer
                                        refer infer
                                            refer not
                                                push 1 apply
                                            apply
                                            push 1 apply
                                        apply
                                        refer infer
                                            refer infer
                                                refer not
                                                    push 1 apply
                                                apply
                                                push 1 apply
                                            apply
                                            push 1 apply
                                        apply
                                    apply
                                    express refer infer
                                        refer infer
                                            refer not
                                                push 1 apply
                                            apply
                                            push 1 apply
                                        apply
                                        push 1 apply
                                    apply
                                    refer super:prop_logic_pure:reduce_condition
                                        refer super:prop_logic_pure:all
                                            push 3 apply
                                            push 4 apply
                                            push 5 apply
                                        apply
                                        express refer infer
                                            refer not
                                                push 1 apply
                                            apply
                                            push 1 apply
                                        apply
                                        express push 1 apply
                                    apply
                                    swap
                                apply
                                export proof_by_contradiction
clear

# Double Negative: ~~a>a
express refer prop_logic trustall assume
    symbol # a: 1
        push 0
            unbind # 2: mp
                unbind # 3: fo_l1
                    unbind # 4: fo_l2
                        unbind pop # 5: fo_l3
                        push 2 # mp for (~~a>(b>a))>((~~a>b)>(~~a>a))
                        # where b = (~a>~~a)
                            express refer infer
                                refer not refer not
                                    push 1 apply
                                apply apply
                                refer infer
                                    # prepare b
                                    refer infer
                                        refer not
                                            push 1 apply
                                        apply
                                        refer not refer not
                                            push 1 apply
                                        apply apply
                                    apply # b end
                                    push 1 apply
                                apply
                            apply # mp param 1 complete
                            express refer infer
                                refer infer
                                    refer not refer not
                                        push 1 apply
                                    apply apply
                                    refer infer # b start
                                        refer not
                                            push 1 apply
                                        apply
                                        refer not refer not
                                            push 1 apply
                                        apply apply
                                    apply # b end
                                apply
                                refer infer
                                    refer not refer not
                                        push 1 apply
                                    apply apply
                                    push 1 apply
                                apply
                            apply
                            push 4 # fo_l2
                                express refer not
                                    refer not
                                        push 1 apply
                                    apply
                                apply # ~~a
                                express refer infer
                                    refer not
                                        push 1 apply
                                    apply
                                    refer not
                                        refer not
                                            push 1 apply
                                        apply
                                    apply
                                apply
                                express push 1 apply
                            apply
                            # mp waiting for condition
                            # condition: (~~a>(b>a))
                            push 2 # mp for (b>a),(~~a>(b>a))
                                express refer infer
                                    refer infer # b start
                                        refer not
                                            push 1 apply
                                        apply
                                        refer not refer not
                                            push 1 apply
                                        apply apply
                                    apply # b end
                                    push 1 apply
                                apply
                                express refer infer
                                    refer not refer not
                                        push 1 apply
                                    apply apply
                                    refer infer
                                        refer infer # b start
                                            refer not
                                                push 1 apply
                                            apply
                                            refer not refer not
                                                push 1 apply
                                            apply apply
                                        apply # b end
                                        push 1 apply
                                    apply
                                apply
                                # make p>q for mp
                                push 3 # fo_l1
                                    express refer infer
                                        refer infer # b start
                                            refer not
                                                push 1 apply
                                            apply
                                            refer not refer not
                                                push 1 apply
                                            apply apply
                                        apply # b end
                                        push 1 apply
                                    apply
                                    express refer not refer not
                                        push 1 apply
                                    apply apply
                                apply
                                # mp ready for condition
                                refer hs # hs for b, ~a>a, a
                                    push 0 apply
                                    express refer infer # begin b
                                        refer not
                                            push 1 apply
                                        apply
                                        refer not refer not
                                            push 1 apply
                                        apply apply
                                    apply # end b
                                    express refer infer
                                        refer not
                                            push 1 apply
                                        apply
                                        push 1 apply
                                    apply
                                    express push 1 apply
                                    # hs init complete.
                                    push 5 # fo_l3
                                        express push 1 apply
                                        express refer not
                                            push 1 apply
                                        apply
                                    apply
                                    refer proof_by_contradiction
                                        push 0 apply
                                        express push 1 apply
                                    apply
                                apply
                            apply
                            # ((~~a>b)>(~~a>a))
                            push 2 # mp for (~~a>b), (~~a>a)
                                express refer infer
                                    refer not refer not
                                        push 1 apply
                                    apply apply
                                    refer infer # begin b
                                        refer not
                                            push 1 apply
                                        apply
                                        refer not refer not
                                            push 1 apply
                                        apply apply
                                    apply # end b
                                apply
                                express refer infer
                                    refer not refer not
                                        push 1 apply
                                    apply apply
                                    push 1 apply
                                apply
                                # mp init complete
                                swap
                            apply
                            # mp ready, waiting for condition
                            push 3 # fo_l1 for (~~a>b)
                                express refer not refer not
                                    push 1 apply
                                apply apply
                                express refer not
                                    push 1 apply
                                apply
                            apply
                            export double_neg
clear
