# not
express # definition
    symbol
        concept not
clear

# Formal statement calculus-L
# infer: A -> B
express
    symbol # a
        symbol # b
            concept infer # a->b
            refer infer # a>(b>a)
                push 1 apply
                refer infer # B->A
                    push 2 apply
                    push 1 apply
                apply
                export fo_l1 # \a\b a>(b>a)
            pop
            symbol # c
                refer infer # (a>(b>c))>((a>b)>(a>c))
                    refer infer # a>(b>c)
                        push 1 apply
                        refer infer # b>c
                            push 2 apply
                            push 3 apply
                        apply
                    apply
                    refer infer
                        refer infer # a>b
                            push 1 apply
                            push 2 apply
                        apply
                        refer infer # a>c
                            push 1 apply
                            push 3 apply
                        apply
                    apply
                    export fo_l2 # \a\b\c (a->(b->c))->((a->b)->(a->c))
                pop
            pop
            refer infer
                refer infer # not(a)>not(b)
                    refer not
                        push 1 apply
                    apply
                    refer not
                        push 2 apply
                    apply
                apply
                refer infer # b>a
                    push 2 apply
                    push 1 apply
                apply
                export fo_l3 # (not(a)>not(b))>(b>a)
            pop
            express refer infer push 1 apply push 2 apply assume # assume a>b
                express push 1 assume # assume a
                    push 2
                        export mp
clear
express refer mp assume
    express refer fo_l1 assume
        express refer fo_l2 assume
            concept prop_logic_pure
clear
express refer mp assume
    express refer fo_l1 assume
        express refer fo_l2 assume
            express refer fo_l3 assume
                concept prop_logic
clear

# Hypothetical Syllogism
express refer prop_logic_pure trustall assume
    symbol # a: 1
        symbol # b: 2
            symbol #c: 3
                express refer infer push 1 apply push 2 apply assume # a>b: 4
                    express refer infer push 2 apply push 3 apply assume # b>c: 5
                        push 0 # prop_logic
                            unbind # mp: 6
                                unbind # fo_l1: 7
                                    unbind pop # fo_l2
                                    push 6
                                        express refer infer
                                            push 1 apply
                                            push 5 apply
                                        apply
                                        express refer infer
                                            push 4 apply
                                            refer infer
                                                push 1 apply
                                                push 3 apply
                                            apply
                                        apply
                                        # mp: a>(b>c), (a>b)>(a>c)
                                        swap # make fo_l2 on top
                                        express push 1 apply
                                        express push 2 apply
                                        express push 3 apply
                                    apply
                                    # mp state 1, waiting for (a>(b>c))
                                    push 6
                                        push 5 apply
                                        express refer infer
                                            push 1 apply
                                            push 5 apply
                                        apply
                                        # mp: (b>c)>(a>(b>c))
                                        push 7
                                            push 5 apply
                                            express push 1 apply
                                        apply
                                        # mp: waiting for b>c
                                        push 5 apply
                                        # (a>(b>c))
                                    apply
                                    # (a>b)>(a>c)
                                    push 6
                                        push 4 apply
                                        express refer infer
                                            push 1 apply
                                            push 3 apply
                                        apply
                                        swap
                                    apply
                                    push 4 apply
                                    # a>c
                                    export hs
clear

# Self-proving (a->a)
express refer prop_logic_pure trustall assume
    symbol # a: 1
        push 0
            unbind # 2: mp
                unbind # 3: fo_l1
                    unbind pop # 4: fo_l2
                    express push 1 apply
                    express refer infer
                        push 1 apply
                        push 1 apply
                    apply # a>a
                    express push 1 apply
                    # (a>((a>a)>a))>((a>(a>a))>(a>a))
                    push 2 # mp
                        express refer infer
                            push 1 apply
                            refer infer
                                refer infer
                                    push 1 apply
                                    push 1 apply
                                apply
                                push 1 apply
                            apply
                        apply
                        express refer infer
                            refer infer
                                push 1 apply
                                refer infer
                                    push 1 apply
                                    push 1 apply
                                apply
                            apply
                            refer infer
                                push 1 apply
                                push 1 apply
                            apply
                        apply
                        swap
                    apply
                    # mp waiting for (a>((a>a)>a))
                    push 3
                        express push 1 apply
                        express refer infer
                            push 1 apply
                            push 1 apply
                        apply
                    apply
                    # ((a>(a>a))>(a>a))
                    push 2 # mp
                        express refer infer
                            push 1 apply
                            refer infer
                                push 1 apply
                                push 1 apply
                            apply
                        apply
                        express refer infer
                            push 1 apply
                            push 1 apply
                        apply
                        swap
                    apply
                    # mp waiting for a>(a>a)
                    push 3
                        express push 1 apply
                        express push 1 apply
                    apply
                    export self_prove
clear

# Unwrap True: a>((a>b)>b)
express refer prop_logic_pure trustall assume
    symbol # a: 1
        symbol # b: 2
            push 0
                unbind # 3: mp
                    unbind # 4: fo_l1
                        unbind pop # 5: fo_l2
                        refer hs # a, (a>b)>a, (a>b)>b
                            push 0 apply
                            express push 1 apply
                            express refer infer
                                refer infer
                                    push 1 apply
                                    push 2 apply
                                apply
                                push 1 apply
                            apply
                            express refer infer
                                refer infer
                                    push 1 apply
                                    push 2 apply
                                apply
                                push 2 apply
                            apply
                            # HS init complete.
                            # prepare a>((a>b)>a)
                            push 4
                                express push 1 apply
                                express refer infer
                                    push 1 apply
                                    push 2 apply
                                apply
                            apply
                            # prepare ((a>b)>a)>((a>b)>b)
                            push 3 # mp for (a>b)>(a>b), ((a>b)>a)>((a>b)>b)
                                express refer infer
                                    refer infer
                                        push 1 apply
                                        push 2 apply
                                    apply
                                    refer infer
                                        push 1 apply
                                        push 2 apply
                                    apply
                                apply
                                express refer infer
                                    refer infer
                                        refer infer
                                            push 1 apply
                                            push 2 apply
                                        apply
                                        push 1 apply
                                    apply
                                    refer infer
                                        refer infer
                                            push 1 apply
                                            push 2 apply
                                        apply
                                        push 2 apply
                                    apply
                                apply
                                # mp init complete. start p>q.
                                push 5
                                    express refer infer
                                        push 1 apply
                                        push 2 apply
                                    apply
                                    express push 1 apply
                                    express push 2 apply
                                apply
                                # mp waiting for condition (a>b)>(a>b)
                                refer self_prove
                                    push 0 apply
                                    express refer infer
                                        push 1 apply
                                        push 2 apply
                                    apply
                                apply
                                # got ((a>b)>a)>((a>b)>b)
                            apply
                            export unwrap_true
clear


# Reduce Condition (a>(a>b))>(a>b)
express refer prop_logic_pure trustall assume
    symbol # a: 1
        symbol # b: 2
            push 0
                unbind # 3: mp
                    unbind # 4: fo_l1
                        unbind pop # 5: fo_l2
                        refer hs
                            push 0 apply
                            express refer infer
                                push 1 apply
                                refer infer
                                    push 1 apply
                                    push 2 apply
                                apply
                            apply
                            express refer infer
                                refer infer
                                    push 1 apply
                                    push 1 apply
                                apply
                                refer infer
                                    push 1 apply
                                    push 2 apply
                                apply
                            apply
                            express refer infer
                                push 1 apply
                                push 2 apply
                            apply
                            # HS init complete
                            # Prepare (a>(a>b))>((a>a)>(a>b))
                            push 5 # fo_l2
                                express push 1 apply
                                express push 1 apply
                                express push 2 apply
                            apply
                            # Prepare ((a>a)>(a>b))>(a>b)
                            push 3 # mp
                                express refer infer
                                    push 1 apply
                                    push 1 apply
                                apply
                                express refer infer
                                    refer infer
                                        refer infer
                                            push 1 apply
                                            push 1 apply
                                        apply
                                        refer infer
                                            push 1 apply
                                            push 2 apply
                                        apply
                                    apply
                                    refer infer
                                        push 1 apply
                                        push 2 apply
                                    apply
                                apply
                                # mp init complete
                                # prepare (a>a)>(((a>a)>(a>b))>(a>b))
                                refer unwrap_true
                                    push 0 apply
                                    express refer infer
                                        push 1 apply
                                        push 1 apply
                                    apply
                                    express refer infer
                                        push 1 apply
                                        push 2 apply
                                    apply
                                apply
                                refer self_prove
                                    push 0 apply
                                    express push 1 apply
                                apply
                            apply
                            export reduce_condition
clear

# Proof by contradiction
express refer prop_logic trustall assume
    symbol # a: 1
        push 0
            push 0 # 2: double_neg
                unbind # 3: mp
                    unbind # 4: fo_l1
                        unbind # 5: fo_l2
                            unbind pop # 6: fo_l3
                            refer hs
                                refer prop_logic_pure
                                    push 3 apply
                                    push 4 apply
                                    push 5 apply
                                apply
                                express refer not
                                    push 1 apply
                                apply # ~a
                                express refer infer
                                    refer not
                                        refer not
                                            refer infer
                                                refer not
                                                    push 1 apply
                                                apply
                                                push 1 apply
                                            apply
                                        apply
                                    apply
                                    refer not
                                        push 1 apply
                                    apply
                                    # (~~(~a>a)>~a)
                                apply 
                                express refer infer
                                    push 1 apply
                                    refer not
                                        refer infer
                                            refer not
                                                push 1 apply
                                            apply
                                            push 1 apply
                                        apply
                                    apply
                                    # a>(~(~a>a))
                                apply
                                # HS init complete, expect a>b and b>c
                                push 4 # fo_l1
                                    express refer not
                                        push 1 apply
                                    apply
                                    express refer not
                                        refer not
                                            refer infer
                                                refer not
                                                    push 1 apply
                                                apply
                                                push 1 apply
                                            apply
                                        apply
                                    apply
                                    # (~a>(~~(~a>a)>~a))
                                apply
                                push 6 # fo_l3
                                    express refer not
                                        refer infer
                                            refer not
                                                push 1 apply
                                            apply
                                            push 1 apply
                                        apply
                                    apply
                                    express push 1 apply
                                apply
                                # HS complete, get on 7:
                                # (~a>(a>~(~a>a)))
                                push 3 # mp
                                    push 7 apply # (~a>(a>~(~a>a)))
                                    express refer infer
                                        refer infer
                                            refer not
                                                push 1 apply
                                            apply
                                            push 1 apply
                                        apply
                                        refer infer
                                            refer not
                                                push 1 apply
                                            apply
                                            refer not
                                                refer infer
                                                    refer not
                                                        push 1 apply
                                                    apply
                                                    push 1 apply
                                                apply
                                            apply
                                        apply
                                    apply
                                    push 5 # fo_l2
                                        express refer not
                                            push 1 apply
                                        apply # ~a
                                        express push 1 apply # a
                                        express refer not
                                            refer infer
                                                refer not
                                                    push 1 apply
                                                apply # ~a
                                                push 1 apply # a
                                            apply # ~a>a
                                        apply #~(~a>a)
                                    apply # (~a>(a>~(~a>a)))>((~a>a)>(~a>~(~a>a)))
                                    swap
                                apply
                                # (~a>a)>(~a>~(~a>a))
                                refer hs # (~a>a),(~a>~(~a>a)),((~a>a)>a)
                                    refer prop_logic_pure
                                        push 3 apply
                                        push 4 apply
                                        push 5 apply
                                    apply
                                    express refer infer
                                        refer not
                                            push 1 apply
                                        apply
                                        push 1 apply
                                    apply # (~a>a)
                                    express refer infer
                                        refer not
                                            push 1 apply
                                        apply # ~a
                                        refer not
                                            refer infer
                                                refer not
                                                    push 1 apply
                                                apply
                                                push 1 apply
                                            apply
                                        apply # ~(~a>a)
                                    apply # ~a>~(~a>a)
                                    express refer infer
                                        refer infer
                                            refer not
                                                push 1 apply
                                            apply
                                            push 1 apply
                                        apply # (~a>a)
                                        push 1 apply # a
                                    apply # (~a>a)>a
                                    swap
                                apply
                                push 6 # fo_l3
                                    express push 1 apply
                                    express refer infer
                                        refer not
                                            push 1 apply
                                        apply
                                        push 1 apply
                                    apply # (~a>a)
                                    # (~a>~(~a>a))>((~a>a)>a)
                                apply
                                # (~a>a)>((~a>a)>a)
                                push 3 # mp
                                    express refer infer
                                        refer infer
                                            refer not
                                                push 1 apply
                                            apply
                                            push 1 apply
                                        apply
                                        refer infer
                                            refer infer
                                                refer not
                                                    push 1 apply
                                                apply
                                                push 1 apply
                                            apply
                                            push 1 apply
                                        apply
                                    apply
                                    express refer infer
                                        refer infer
                                            refer not
                                                push 1 apply
                                            apply
                                            push 1 apply
                                        apply
                                        push 1 apply
                                    apply
                                    refer reduce_condition
                                        refer prop_logic_pure
                                            push 3 apply
                                            push 4 apply
                                            push 5 apply
                                        apply
                                        express refer infer
                                            refer not
                                                push 1 apply
                                            apply
                                            push 1 apply
                                        apply
                                        express push 1 apply
                                    apply
                                    swap
                                apply
                                export proof_by_contradiction
clear

# Double Negative: ~~a>a
express refer prop_logic trustall assume
    symbol # a: 1
        push 0
            unbind # 2: mp
                unbind # 3: fo_l1
                    unbind # 4: fo_l2
                        unbind pop # 5: fo_l3
                        push 2 # mp for (~~a>(b>a))>((~~a>b)>(~~a>a))
                        # where b = (~a>~~a)
                            express refer infer
                                refer not refer not
                                    push 1 apply
                                apply apply
                                refer infer
                                    # prepare b
                                    refer infer
                                        refer not
                                            push 1 apply
                                        apply
                                        refer not refer not
                                            push 1 apply
                                        apply apply
                                    apply # b end
                                    push 1 apply
                                apply
                            apply # mp param 1 complete
                            express refer infer
                                refer infer
                                    refer not refer not
                                        push 1 apply
                                    apply apply
                                    refer infer # b start
                                        refer not
                                            push 1 apply
                                        apply
                                        refer not refer not
                                            push 1 apply
                                        apply apply
                                    apply # b end
                                apply
                                refer infer
                                    refer not refer not
                                        push 1 apply
                                    apply apply
                                    push 1 apply
                                apply
                            apply
                            push 4 # fo_l2
                                express refer not
                                    refer not
                                        push 1 apply
                                    apply
                                apply # ~~a
                                express refer infer
                                    refer not
                                        push 1 apply
                                    apply
                                    refer not
                                        refer not
                                            push 1 apply
                                        apply
                                    apply
                                apply
                                express push 1 apply
                            apply
                            # mp waiting for condition
                            # condition: (~~a>(b>a))
                            push 2 # mp for (b>a),(~~a>(b>a))
                                express refer infer
                                    refer infer # b start
                                        refer not
                                            push 1 apply
                                        apply
                                        refer not refer not
                                            push 1 apply
                                        apply apply
                                    apply # b end
                                    push 1 apply
                                apply
                                express refer infer
                                    refer not refer not
                                        push 1 apply
                                    apply apply
                                    refer infer
                                        refer infer # b start
                                            refer not
                                                push 1 apply
                                            apply
                                            refer not refer not
                                                push 1 apply
                                            apply apply
                                        apply # b end
                                        push 1 apply
                                    apply
                                apply
                                # make p>q for mp
                                push 3 # fo_l1
                                    express refer infer
                                        refer infer # b start
                                            refer not
                                                push 1 apply
                                            apply
                                            refer not refer not
                                                push 1 apply
                                            apply apply
                                        apply # b end
                                        push 1 apply
                                    apply
                                    express refer not refer not
                                        push 1 apply
                                    apply apply
                                apply
                                # mp ready for condition
                                refer hs # hs for b, ~a>a, a
                                    refer prop_logic_pure
                                        push 2 apply
                                        push 3 apply
                                        push 4 apply
                                    apply
                                    express refer infer # begin b
                                        refer not
                                            push 1 apply
                                        apply
                                        refer not refer not
                                            push 1 apply
                                        apply apply
                                    apply # end b
                                    express refer infer
                                        refer not
                                            push 1 apply
                                        apply
                                        push 1 apply
                                    apply
                                    express push 1 apply
                                    # hs init complete.
                                    push 5 # fo_l3
                                        express push 1 apply
                                        express refer not
                                            push 1 apply
                                        apply
                                    apply
                                    refer proof_by_contradiction
                                        push 0 apply
                                        express push 1 apply
                                    apply
                                apply
                            apply
                            # ((~~a>b)>(~~a>a))
                            push 2 # mp for (~~a>b), (~~a>a)
                                express refer infer
                                    refer not refer not
                                        push 1 apply
                                    apply apply
                                    refer infer # begin b
                                        refer not
                                            push 1 apply
                                        apply
                                        refer not refer not
                                            push 1 apply
                                        apply apply
                                    apply # end b
                                apply
                                express refer infer
                                    refer not refer not
                                        push 1 apply
                                    apply apply
                                    push 1 apply
                                apply
                                # mp init complete
                                swap
                            apply
                            # mp ready, waiting for condition
                            push 3 # fo_l1 for (~~a>b)
                                express refer not refer not
                                    push 1 apply
                                apply apply
                                express refer not
                                    push 1 apply
                                apply
                            apply
                            export double_neg
clear
